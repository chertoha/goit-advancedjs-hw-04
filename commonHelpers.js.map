{"version":3,"file":"commonHelpers.js","sources":["../src/js/config.js","../src/js/pixabayAPI.js","../src/js/createGalleryState.js","../src/js/gallery/gallery-markup.js","../src/js/gallery/gallery.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '40477492-fb7a942987769cd06fc4fed72';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const PER_PAGE = 20;\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  },\n});\n","import { api } from './config';\n\nexport const fetchImages = async (query, page = 1, limit = 20) => {\n  const response = await api.get('', {\n    params: {\n      q: query,\n      page,\n      per_page: limit,\n    },\n  });\n  return response.data;\n};\n","import { fetchImages } from './pixabayAPI';\n\nexport function createGalleryState(\n  procedure,\n  { initialPage, limit, initialQuery, initialList }\n) {\n  let page = initialPage || 1;\n  let query = initialQuery || '';\n  let list = initialList || [];\n\n  async function fetchData() {\n    if (!query) return;\n    try {\n      const data = await fetchImages(query, page, limit);\n      console.log('DATA', data);\n      list.push(...data.hits);\n      procedure(list);\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  return {\n    getPage() {\n      return page;\n    },\n\n    increasePage() {\n      page += 1;\n      fetchData();\n    },\n\n    resetPage() {\n      page = initialPage || 1;\n    },\n\n    setQuery(newQuery) {\n      if (query !== newQuery) {\n        this.resetPage();\n        this.clearList();\n      }\n      query = newQuery;\n      fetchData();\n    },\n\n    clearList() {\n      list = [];\n    },\n  };\n}\n","export function createGAlleryMarkup(list) {\n  return list.map(createGalleryMarkup).join('');\n}\n\nfunction createGalleryMarkup({\n  largeImageURL,\n  tags,\n  likes,\n  views,\n  comments,\n  downloads,\n  webformatURL,\n}) {\n  return `\n  <div class=\"photo-card\">\n    <a class=\"photo-card__link\" href=\"${largeImageURL}\">\n        <img class=\"photo-card__img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n    </a>    \n    <div class=\"info\">\n        <p class=\"info-item\">\n            <b>Likes</b><span>${likes}</span>\n        </p>\n        <p class=\"info-item\">\n            <b>Views</b><span>${views}</span>\n        </p>\n        <p class=\"info-item\">\n            <b>Comments</b><span>${comments}</span>\n        </p>\n        <p class=\"info-item\">\n            <b>Downloads</b><span>${downloads}</span>\n        </p>\n    </div>\n</div>`;\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { PER_PAGE } from '../config';\nimport { createGalleryState } from '../createGalleryState';\nimport { fetchImages } from '../pixabayAPI';\nimport { createGAlleryMarkup } from './gallery-markup';\n\nconst form = document.querySelector('.search');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  showCounter: false,\n});\n\nconst galleryIstance = createGalleryState(render, {\n  limit: PER_PAGE,\n});\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const query = e.target.elements.searchQuery.value.trim();\n\n  galleryIstance.setQuery(query);\n});\n\nloadMoreBtn.addEventListener('click', () => {\n  galleryIstance.increasePage();\n});\n\n//----------------------------Helpers\nfunction render(data) {\n  const markup = createGAlleryMarkup(data);\n  gallery.innerHTML = '';\n  gallery.insertAdjacentHTML('beforeend', markup);\n  lightbox.refresh();\n}\n"],"names":["API_KEY","BASE_URL","PER_PAGE","api","axios","fetchImages","query","page","limit","createGalleryState","procedure","initialPage","initialQuery","initialList","list","fetchData","data","error","newQuery","createGAlleryMarkup","createGalleryMarkup","largeImageURL","tags","likes","views","comments","downloads","webformatURL","form","gallery","loadMoreBtn","lightbox","SimpleLightbox","galleryIstance","render","e","markup"],"mappings":"6vBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAW,GAEXC,EAAMC,EAAM,OAAO,CAC9B,QAASH,EACT,OAAQ,CACN,IAAKD,EACL,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACH,CAAC,ECbYK,EAAc,MAAOC,EAAOC,EAAO,EAAGC,EAAQ,MACxC,MAAML,EAAI,IAAI,GAAI,CACjC,OAAQ,CACN,EAAGG,EACH,KAAAC,EACA,SAAUC,CACX,CACL,CAAG,GACe,KCRX,SAASC,EACdC,EACA,CAAE,YAAAC,EAAa,MAAAH,EAAO,aAAAI,EAAc,YAAAC,CAAa,EACjD,CACA,IAAIN,EAAOI,GAAe,EACtBL,EAAQM,GAAgB,GACxBE,EAAOD,GAAe,GAE1B,eAAeE,GAAY,CACzB,GAAKT,EACL,GAAI,CACF,MAAMU,EAAO,MAAMX,EAAYC,EAAOC,EAAMC,CAAK,EACjD,QAAQ,IAAI,OAAQQ,CAAI,EACxBF,EAAK,KAAK,GAAGE,EAAK,IAAI,EACtBN,EAAUI,CAAI,CACf,OAAQG,EAAP,CACA,QAAQ,IAAI,QAASA,CAAK,CAC3B,CACF,CAED,MAAO,CACL,SAAU,CACR,OAAOV,CACR,EAED,cAAe,CACbA,GAAQ,EACRQ,GACD,EAED,WAAY,CACVR,EAAOI,GAAe,CACvB,EAED,SAASO,EAAU,CACbZ,IAAUY,IACZ,KAAK,UAAS,EACd,KAAK,UAAS,GAEhBZ,EAAQY,EACRH,GACD,EAED,WAAY,CACVD,EAAO,CAAA,CACR,CACL,CACA,CCjDO,SAASK,EAAoBL,EAAM,CACxC,OAAOA,EAAK,IAAIM,CAAmB,EAAE,KAAK,EAAE,CAC9C,CAEA,SAASA,EAAoB,CAC3B,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,EACA,aAAAC,CACF,EAAG,CACD,MAAO;AAAA;AAAA,wCAE+BN;AAAA,4CACIM,WAAsBL;AAAA;AAAA;AAAA;AAAA,gCAIlCC;AAAA;AAAA;AAAA,gCAGAC;AAAA;AAAA;AAAA,mCAGGC;AAAA;AAAA;AAAA,oCAGCC;AAAA;AAAA;AAAA,OAIpC,CC1BA,MAAME,EAAO,SAAS,cAAc,SAAS,EACvCC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAc,SAAS,cAAc,YAAY,EAEjDC,EAAW,IAAIC,EAAe,aAAc,CAChD,YAAa,EACf,CAAC,EAEKC,EAAiBxB,EAAmByB,EAAQ,CAChD,MAAOhC,CACT,CAAC,EAED0B,EAAK,iBAAiB,SAAUO,GAAK,CACnCA,EAAE,eAAc,EAChB,MAAM7B,EAAQ6B,EAAE,OAAO,SAAS,YAAY,MAAM,OAElDF,EAAe,SAAS3B,CAAK,CAC/B,CAAC,EAEDwB,EAAY,iBAAiB,QAAS,IAAM,CAC1CG,EAAe,aAAY,CAC7B,CAAC,EAGD,SAASC,EAAOlB,EAAM,CACpB,MAAMoB,EAASjB,EAAoBH,CAAI,EACvCa,EAAQ,UAAY,GACpBA,EAAQ,mBAAmB,YAAaO,CAAM,EAC9CL,EAAS,QAAO,CAClB"}